@page "/reconciliation"
@inherits FluxorComponent

@inject IncomeExpenseViewModel ViewModel
@inject ILogger<Reconciliation> Logger

<h1>Incomes and Expenses with Cumuliative Accounts</h1>

@if (ViewModel.ApplicationState.Value.YearsState is YearsState yearsState)
{
    @if (yearsState.IsLoading)
    {
        <p><em>Fetching years...</em></p>
    }
    else if (yearsState.IsLoaded)
    {
        <label>Select a Fiscal year: </label>
        <select @bind="ViewModel.SelectedYear"
        @bind:event="oninput"
        @onchange="ViewModel.OnChange">
            <option selected="selected" value="0">Select an option</option>
            @if (yearsState.Data is List<int> years)
            {
                foreach (var y in years)
                {
                    <option value="@y">@y</option>
                }
            }
        </select>
        <button @onclick="ViewModel.GetYears">Refresh</button>
        @if (ViewModel.IsInvalidSelection)
        {
            <div class="text-danger">Please select a valid year</div>
}
        else if (ViewModel.SelectedState is null
         && !ViewModel.IsInvalidSelection
        )
        {
            <div class="text-danger">No Data Available</div>
        }
        else if (ViewModel.SelectedState is IncomeExpenseState selectedState)
        {
            <table>
                <thead>
                    <tr>
                        <th colspan="14" style="text-align: center">
                            Year @ViewModel.SelectedYear
                        </th>
                    </tr>
                    <tr>
                        <th style="padding:5px"></th>
                        <th style="padding:5px"></th>
                        @for (var m = 1; m <= 12; m++)
                        {
                            <th style="padding:5px; text-align:center">
                                @DateTime.Parse($"{m}/1/{ViewModel.SelectedYear}").ToString("MMM")
                            </th>
                        }
                    </tr>
                </thead>
                <tbody>
                    @if (selectedState.Data is IncomeExpenseDto data)
                    {
                        <tr>
                            <td style="padding:5px"></td>
                            <th style="padding: 5px; text-align: right">Incomes</th>
                            @foreach (var d in data.Incomes)
                            {
                                <td style="padding: 5px; text-align: center">@d.Value</td>
                            }
                        </tr>
                        <tr>
                            <td style="padding:5px"></td>
                            <th style="padding: 5px; text-align: right">Cumuliative Incomes</th>
                            @foreach (var d in data.CumuliativeIncomes)
                            {
                                <td style="padding: 5px; text-align: center">@d.Value</td>
                            }
                        </tr>
                        <tr>
                            <td style="padding:5px"></td>
                            <th style="padding: 5px; text-align: right">Expenses</th>
                            @foreach (var d in data.Expenses)
                            {
                                <td style="padding: 5px; text-align: center">@d.Value</td>
                            }
                        </tr>
                        <tr>
                            <td style="padding:5px"></td>
                            <th style="padding: 5px; text-align: right">Cumuliative Expenses</th>
                            @foreach (var d in data.CumuliativeExpenses)
                            {
                                <td style="padding: 5px; text-align: center">@d.Value</td>
                            }
                        </tr>
                        <tr>
                            <td style="padding:5px"></td>
                            <th style="padding: 5px; text-align: right">Result</th>
                            @foreach (var d in data.Result)
                            {
                                <td style="padding: 5px; text-align: center">@d.Value</td>
                            }
                        </tr>
                    }
                    else
                    {
                        <tr>
                            <td colspan="14">No Data Available</td>
                        </tr>
                    }
                </tbody>
            </table>
        }
    }
}
else
{
    <p><em>Populating years...</em></p>
}

@if (!string.IsNullOrWhiteSpace(ViewModel.ErrorMessage))
{
    <div class="text-danger">
        <label>Error: </label>
        @ViewModel.ErrorMessage
    </div>
}