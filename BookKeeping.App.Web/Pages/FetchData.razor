@page "/reconciliation"
@using BookKeeping.API.DTOs
@inject HttpClient Http

<h1>Weather forecast</h1>

<p>This component demonstrates fetching data from the server.</p>

@if (_years is null)
{
	<p><em>Loading...</em></p>
}
else
{
	<select @bind="_selectedYear"
		   @bind:event="oninput"
		   @onchange="OnChange">
		<option selected="selected">Select an option</option>
		@foreach (var y in _years)
		{
			<option value="@y">@y</option>
		}
	</select>
	@if (_dto == null)
	{
		<div>No data available</div>
	}
	else
	{
		<table>
			<thead>
				<tr>
					<th colspan="14" style="text-align: center">
						Year @_selectedYear
					</th>
				</tr>
				<tr>
					<th style="padding:5px"></th>
					<th style="padding:5px"></th>
					@for (var i = 1; i <= 12; i++)
					{
						<th style="padding:5px; text-align:center">
							@DateTime.Parse($"{i}/1/{_selectedYear}").ToString("MMM")
						</th>
					}
				</tr>
			</thead>
			<tbody>
				<tr>
					<td style="padding:5px"></td>
					<td style="padding:5px">Incomes</td>
					@foreach (var d in _dto.Incomes.OrderBy(i => i.Key))
					{
						<td style="padding:5px">@d.Value</td>
					}
				</tr>
				<tr>
					<td style="padding:5px"></td>
					<td style="padding:5px">Cumuliative Incomes</td>
					@foreach (var d in _dto.CumuliativeIncomes.OrderBy(i => i.Key))
					{
						<td style="padding:5px">@d.Value</td>
					}
				</tr>
				<tr>
					<td style="padding:5px"></td>
					<td style="padding:5px">Expenses</td>
					@foreach (var d in _dto.Expenses.OrderBy(i => i.Key))
					{
						<td style="padding:5px">@d.Value</td>
					}
				</tr>
				<tr>
					<td style="padding:5px"></td>
					<td style="padding:5px">Cumuliative Expenses</td>
					@foreach (var d in _dto.CumuliativeExpenses.OrderBy(i => i.Key))
					{
						<td style="padding:5px">@d.Value</td>
					}
				</tr>
				<tr>
					<td style="padding:5px"></td>
					<td style="padding:5px">Result</td>
					@foreach (var d in _dto.Result.OrderBy(i => i.Key))
					{
						<td style="padding:5px">@d.Value</td>
					}
				</tr>
			</tbody>
		</table>
	}
}

@code {
	private int _selectedYear;
	private ICollection<int> _years;
	private IncomeExpenseDto _dto;
	private ElementReference _select;

	private async void OnChange(ChangeEventArgs args)
	{
		_dto = await Http.GetFromJsonAsync<IncomeExpenseDto>($"/api/Transactions/{args.Value}");
		StateHasChanged();
	}

	protected override async Task OnInitializedAsync()
	{
		_years = await Http.GetFromJsonAsync<int[]>("/api/Transactions/years");
	}
}
